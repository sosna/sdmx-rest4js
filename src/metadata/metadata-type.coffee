# Specifies the types of structural metadata defined in SDMX.
itemSchemes = [
  'categoryscheme'
  'conceptscheme'
  'codelist'
  'organisationscheme'
  'agencyscheme'
  'dataproviderscheme'
  'dataconsumerscheme'
  'organisationunitscheme'
  'hierarchicalcodelist'
  'reportingtaxonomy'
  'transformationscheme'
  'rulesetscheme'
  'userdefinedoperatorscheme'
  'customtypescheme'
  'namepersonalisationscheme'
  'namealiasscheme'
]

types =
  DATA_STRUCTURE: 'datastructure'
  METADATA_STRUCTURE: 'metadatastructure'
  CATEGORY_SCHEME: 'categoryscheme'
  CONCEPT_SCHEME: 'conceptscheme'
  CODELIST: 'codelist'
  HIERARCHICAL_CODELIST: 'hierarchicalcodelist'
  ORGANISATION_SCHEME: 'organisationscheme'
  AGENCY_SCHEME: 'agencyscheme'
  DATA_PROVIDER_SCHEME: 'dataproviderscheme'
  DATA_CONSUMER_SCHEME: 'dataconsumerscheme'
  ORGANISATION_UNIT_SCHEME: 'organisationunitscheme'
  DATAFLOW: 'dataflow'
  METADATAFLOW: 'metadataflow'
  REPORTING_TAXONOMY: 'reportingtaxonomy'
  PROVISION_AGREEMENT: 'provisionagreement'
  STRUCTURE_SET: 'structureset'
  PROCESS: 'process'
  CATEGORISATION: 'categorisation'
  CONTENT_CONSTRAINT: 'contentconstraint'
  ATTACHMENT_CONSTRAINT: 'attachmentconstraint'
  ACTUAL_CONSTRAINT: 'actualconstraint'
  ALLOWED_CONSTRAINT: 'allowedconstraint'
  STRUCTURE: 'structure'
  TRANSFORMATION_SCHEME: 'transformationscheme'
  RULESET_SCHEME: 'rulesetscheme'
  USER_DEFINED_OPERATOR_SCHEME: 'userdefinedoperatorscheme'
  CUSTOM_TYPE_SCHEME: 'customtypescheme'
  NAME_PERSONALISATION_SCHEME: 'namepersonalisationscheme'
  NAME_ALIAS_SCHEME: 'namealiasscheme'
  DATA_CONSTRAINT: 'dataconstraint'
  METADATA_CONSTRAINT: 'metadataconstraint'
  HIERARCHY: 'hierarchy'
  HIERARCHY_ASSOCIATION: 'hierarchyassociation'
  VTL_MAPPING_SCHEME: 'vtlmappingscheme'
  VALUE_LIST: 'valuelist'
  STRUCTURE_MAP: 'structuremap'
  REPRESENTATION_MAP: 'representationmap'
  CONCEPT_SCHEME_MAP: 'conceptschememap'
  CATEGORY_SCHEME_MAP: 'categoryschememap'
  ORGANISATION_SCHEME_MAP: 'organisationschememap'
  REPORTING_TAXONOMY_MAP: 'reportingtaxonomymap'
  METADATA_PROVIDER_SCHEME: 'metadataproviderscheme'
  METADATA_PROVISION_AGREEMENT: 'metadataprovisionagreement'
  SDMX_3_0_ALL: '*'

exports.MetadataType = Object.freeze types
exports.isItemScheme = (type) -> type in itemSchemes
